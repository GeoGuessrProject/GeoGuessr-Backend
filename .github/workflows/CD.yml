name: Build & Deploy (no SP)

on:
  push:
    branches: [main]

env:
  ACR_LOGIN_SERVER: geoguessr.azurecr.io
  SERVICES: |
    auth_service
    game_service
    image_service
    notification_service
    score_service

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    # Buildx
    - name: Setup Buildx
      uses: docker/setup-buildx-action@v3

    # Login to ACR using admin user
    - name: Docker login to ACR
      run: echo "${{ secrets.ACR_PASSWORD }}" \
           | docker login ${{ env.ACR_LOGIN_SERVER }} \
                    --username ${{ secrets.ACR_USERNAME }} \
                    --password-stdin

    # Build & push every custom micro-service
    - name: Build & push images
      shell: bash
      run: |
        while IFS= read -r svc; do
          echo "▶︎ Building $svc"
          docker buildx build \
            --platform linux/amd64 \
            -t $ACR_LOGIN_SERVER/geoguessr-backend-${svc}:latest \
            ./${svc} \
            --push
        done <<< "$SERVICES"

    # Write kubeconfig from secret and set KUBECONFIG env-var
    - name: Set kubeconfig
      run: |
        echo "${{ secrets.KUBECONFIG_DATA }}" > $HOME/aks-kubeconfig.yaml
        echo "KUBECONFIG=$HOME/aks-kubeconfig.yaml" >> $GITHUB_ENV

    # Deploy manifests
    - name: kubectl apply
      run: |
        kubectl apply -f kubernetes/
        for d in auth-service game-service image-service notification-service score-service; do
          kubectl rollout status deployment/$d --timeout=90s
        done
