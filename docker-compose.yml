services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend-net

  # mongo:
  #   image: mongo
  #   ports:
  #     - "27017:27017"
  #   healthcheck:
  #     test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   networks:
  #     - backend-net

  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: geodb
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend-net

  auth_service:
    build: ./services/auth_service
    image: vhanert/geoguessr-backend-auth_service:latest
    ports:
      - "8001:8000"
    volumes:
      - ./services/auth_service:/app
    environment:
      RABBITMQ_HOST: rabbitmq
      MYSQL_USER: root
      MYSQL_PASSWORD: rootpassword
      MYSQL_DATABASE: geodb
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      JWT_SECRET_KEY: verysecretkey1234
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - backend-net

  game_service:
    build: ./services/game_service
    image: vhanert/geoguessr-backend-game_service:latest
    ports:
      - "8002:8000"
    volumes:
      - ./services/game_service:/app
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - backend-net

  score_service:
    build: ./services/score_service
    image: vhanert/geoguessr-backend-score_service:latest
    ports:
      - "8004:8000"
    volumes:
      - ./services/score_service:/app
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - backend-net

  notification_service:
    build: ./services/notification_service
    image: vhanert/geoguessr-backend-notification_service:latest
    ports:
      - "8005:8000"
    volumes:
      - ./services/notification_service:/app
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - backend-net

networks:
  backend-net:
    driver: bridge
